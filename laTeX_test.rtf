{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf330
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red191\green0\blue0;\red0\green0\blue191;
\red0\green115\blue0;\red96\green96\blue96;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf2 \
\cf3 // the message asLaTeX returns a string of LaTeX code that can be converted to pdf\cf2 \
\cf3 // pdflatex - this needs to be installed first (see LaTex installers online).\cf2 \
\
\
(\
a = \cf4 SinOsc\cf2 .ar([71, \cf4 LFPulse\cf2 .kr(2).range(34, 45), 45, 34]).abs;\
a = a / 2;\
a = a.sqrt;\
a.asLaTeX;\
)\
\
(\
a = (\cf4 Pulse\cf2 .ar ** \cf4 Pulse\cf2 .ar);\
a.asLaTeX;\
)\
\
(\
a = \cf4 Control\cf2 .names([\cf5 \\freq\cf2 , \cf5 \\amp\cf2 ]).kr([300, 0.1, 550, 0.3])\
a.asLaTeX;\
);\
\
\
(\cf4 SinOsc\cf2 .ar(\cf4 Control\cf2 .names(\cf5 \\freq\cf2 ).kr(440), 0.5pi, \cf4 Control\cf2 .names(\cf5 \\amps\cf2 ).kr(0.2.dup)) * 0.125).asLaTeX;\
\
0.5pi.asLaTeX\
(\cf4 SinOsc\cf2 .ar(203) ** (1/3)).asLaTeX\
\
\
(\
a = 0;\
3.do \{ a = \cf4 Blip\cf2 .ar(a * 30.rand + 30.rand) \};\
a = \cf4 SinOsc\cf2 .ar(a) * 0.1;\
a.asLaTeX;\
)\
\
\
(\
a = (\cf4 SinOsc\cf2 .ar(\cf4 Control\cf2 .names(\cf5 \\freq\cf2 ).kr([1440, 550]), 0.5pi, \cf4 Control\cf2 .names(\cf5 \\amps\cf2 ).kr(0.2.dup)) * 0.135);\
x = a.asLaTexNodeDoc.postln;\
f = \cf4 File\cf2 (\cf6 "~/textex_test"\cf2 .standardizePath, \cf6 "w"\cf2 );\
f.write(x);\
\pard\pardeftab560\ql\qnatural
\cf2 f.close;\
\cf3 //unixCmd("rm" + "~/textex_test.*".standardizePath); // remove all older latex files\cf2 \
runInTerminal(\cf6 "pdflatex"\cf2  + \cf6 "~/textex_test"\cf2 .standardizePath);\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf2 )\
\
unixCmd(\cf6 "open -a safari.app"\cf2  +  \cf6 "~/textex_test.pdf"\cf2 .standardizePath);\
\
\
exp(\cf4 SinOsc\cf2 .ar(log(\cf4 SinOsc\cf2 .ar), 0.5pi)).asLaTexNodeDoc\
\
(\
fork \{\
	\cf4 var\cf2  path;\
	path = \cf6 "~/textex_test.pdf"\cf2 .standardizePath;\
	loop \{\
		5.wait;\
		(\
a = (\cf4 SinOsc\cf2 .ar(\cf4 Control\cf2 .names(\cf5 \\freq\cf2 ).kr([1440, 550].rand), 0.5pi, \cf4 Control\cf2 .names(\cf5 \\amps\cf2 ).kr(0.2.dup)) * 0.135);\
x = a.asLaTexNodeDoc.postln;\
f = \cf4 File\cf2 (path, \cf6 "w"\cf2 );\
f.write(x);\
\pard\pardeftab560\ql\qnatural
\cf2 f.close;\
\cf3 //unixCmd("rm" + "~/textex_test.*".standardizePath); // remove all older latex files\cf2 \
runInTerminal(\cf6 "pdflatex"\cf2  + path + \cf6 "; open"\cf2  + path);\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf2 );\
\}\
\}\
)\
\
\cf3 // works only with TeXniscope (Preview has an updating bug)\cf2 \
(\
fork \{\
	\cf4 var\cf2  path, latexpath, a, x, f;\
	path = \cf6 "textex_test"\cf2 .standardizePath;\
	latexpath = \cf6 "/usr/texbin/pdflatex"\cf2 ;\
	\cf4 inf\cf2 .do \{\
		\
			a = \cf4 SinOsc\cf2 .ar(\{300.rand\} ! 5) * 0.135 * pi;\
			x = a.asLaTexNodeDoc.postln;\
			f = \cf4 File\cf2 (path, \cf6 "w"\cf2 );\
			f.write(x);\
\pard\pardeftab560\ql\qnatural
\cf2 			f.close;\
			\cf3 //unixCmd(latexpath + path);\cf2 \
			unixCmd(latexpath + path + \cf6 "; open -a TeXniscope"\cf2  + path ++ \cf6 ".pdf"\cf2 );\
			3.wait;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf2 \}\
\}\
)\
\
\
\cf3 // works only with TeXniscope (Preview has an updating bug)\cf2 \
(\
\cf4 Tdef\cf2 (\cf5 \\x\cf2 ) \{\
	\cf4 var\cf2  path, latexpath, a, x, f;\
	path = \cf6 "textex_test"\cf2 .standardizePath;\
	latexpath = \cf6 "/usr/texbin/pdflatex"\cf2 ;\
	\cf4 inf\cf2 .do \{ \cf4 |i|\cf2 \
		\
			a = \cf4 Pulse\cf2 .ar(\{300.rand\} ! 5) * 0.135 * pi;\
			a = a.exp;\
			x = a.asLaTexNodeDoc;\
			f = \cf4 File\cf2 (path, \cf6 "w"\cf2 );\
			f.write(x);\
\pard\pardeftab560\ql\qnatural
\cf2 			f.close;\
			0.4.wait;\
			\
			\cf3 //unixCmd(latexpath + path + "; open -a TeXniscope" + path ++ ".pdf");\cf2 \
			if( i == 0) \{\'a0unixCmd(latexpath + path + \cf6 "; open -a TeXniscope"\cf2  + path ++ \cf6 ".pdf"\cf2 ) \} \{\
				unixCmd(latexpath + path, \cf4 nil\cf2 , \cf4 false\cf2 );\
			\};\
			3.wait;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf2 \}\
\}.play;\
)\
\
\
\
\
\cf3 // use sc view\cf2 \
(\
\cf4 Tdef\cf2 (\cf5 \\x\cf2 ) \{\
	\cf4 var\cf2  path, latexpath, a, x, f, w, m, bounds;\
	path = \cf6 "textex_test"\cf2 .standardizePath;\
	latexpath = \cf6 "/usr/texbin/pdflatex"\cf2 ;\
	bounds = \cf4 Rect\cf2 (0, 0, 500, 500 * 2.sqrt);\
\pard\pardeftab560\ql\qnatural
\cf2 	defer \{\
		w = \cf4 SCWindow\cf2 (\cf6 "mov"\cf2 , bounds).front;\
		m = \cf4 SCMovieView\cf2 (w, bounds);\
		m.path = path ++ \cf6 ".pdf"\cf2 ;\
		m.showControllerAndAdjustSize(\cf4 false\cf2 , 1);\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf2 	\};\
	\cf4 inf\cf2 .do \{ \cf4 |i|\cf2 \
		\
			a = \cf4 Pulse\cf2 .ar(\{300.rand\} ! 5) * 0.135 * pi;\
			x = a.asLaTexNodeDoc;\
			f = \cf4 File\cf2 (path, \cf6 "w"\cf2 );\
			f.write(x);\
\pard\pardeftab560\ql\qnatural
\cf2 			f.close;\
			unixCmd(latexpath + path);\
			\cf4 AppClock\cf2 .sched(1, \{\
				\cf3 //m.path = "textex_test2.pdf".standardizePath; // dummy.\cf2 \
				m.path = path ++ \cf6 ".pdf"\cf2 ;\
				\
				m.resizeWithMagnification(1 + 0.01.rand);\
				\cf4 nil\cf2 \
			\});\
			3.wait;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf2 \}\
\}.play;\
)\
\
\
}